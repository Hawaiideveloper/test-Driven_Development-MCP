# Default values for tdd-mcp
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Namespace configuration
namespace:
  name: test-driven-development
  create: true

replicaCount: 1

image:
  # Use GitHub Container Registry
  repository: ghcr.io/hawaiideveloper/tdd-mcp
  # Never: use local image only (for Docker Desktop/local dev)
  # IfNotPresent: pull if not present (for development with GHCR)
  # Always: always pull (for production)
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # ClusterIP for Docker Desktop (use kubectl port-forward to access)
  # Change to LoadBalancer if your cluster supports it
  # Change to NodePort for clusters with extended NodePort range
  type: NodePort
  port: 63777
  targetPort: 63777
  # NodePort must be in range 30000-32767, mapping to internal port 63777
  nodePort: 30234

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables for the application
env: []
  # - name: EXAMPLE_VAR
  #   value: "example_value"

# ConfigMap data (if needed)
configMap:
  enabled: false
  data: {}
    # example.yaml: |
    #   key: value
